<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.5</version>
	</parent>


	<groupId>com.onepeloton.apparelmigration</groupId>
	<artifactId>parent-bom</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>


	<!-- <groupId>com.onepeloton.apparelmigration</groupId> -set as parent in 
		the micro child project <artifactId>parent-bom</artifactId> <version>0.0.1-SNAPSHOT</version> 
		<packaging>pom</packaging> -->

	<description>Root Parent BOM</description>

	<properties>
		<java.version>11</java.version>
		<camel.version>3.19.0</camel.version>
		<commercetools.version>LATEST</commercetools.version>
		<aws.java.sdk2.version>2.20.62</aws.java.sdk2.version>
		

		<skip.tests>false</skip.tests>
		<skip.unit.tests>${skip.tests}</skip.unit.tests>
		<skip.integration.tests>${skip.tests}</skip.integration.tests>

		<integration.tests.pattern>**/*IT.java</integration.tests.pattern>

		<skip.lint>false</skip.lint>
		<skip.code.analysis>false</skip.code.analysis>
		<skip.maven.deploy>true</skip.maven.deploy>

		
		<cloudevents.version>2.2.0</cloudevents.version>
	
		<spring-cloud.version>2021.0.0</spring-cloud.version>
		<springdoc.version>1.6.4</springdoc.version>
		<slf4jVersion>1.6.1</slf4jVersion>
		
		<jib-maven-plugin.version>3.1.4</jib-maven-plugin.version>
		<download-maven-plugin.version>1.6.7</download-maven-plugin.version>
		<junit.version>5.3.2</junit.version>
		<datadog.javaagent.version>0.88.0</datadog.javaagent.version>
		
		<jacoco.maven.plugin.version>0.7.9</jacoco.maven.plugin.version>
		
		<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
		

		
		<sonar.projectName>apparel-migration</sonar.projectName>
		
		<sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<modules>
		

		
		<module>apparelmigration-product-service</module>
         <module>apparelmigration-productimage-service</module>
	   <module>apparelmigration-productprice-service</module>
	    <module>apparelmigration-smartcollections-service</module>
	    <module>apparelmigration-productcolors-service</module>
	    <module>apparelmigration-sizecharts-service</module>
	    <module>apparelmigration-orders-service</module>
	    <module>apparelmigration-bazarvoice-service</module>
	    <module>apparelmigration-producttags-service</module>
		<!-- <module>apparel-migration/app</module> -->

	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>2.7.5</version>
				<scope>test</scope>

				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
		      <groupId>software.amazon.awssdk</groupId>
		      <artifactId>bom</artifactId>
		      <version>${aws.java.sdk2.version}</version>
		      <type>pom</type>
		      <scope>import</scope>
		    </dependency>
			
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.20</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-micrometer-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>2.7.5</version>

			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>2.7.5</version>


			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>1.3.11</version>
			</dependency>


			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-spring-boot-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-http</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test-spring-junit5</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>


			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.17.2 </version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>2.17.2 </version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>2.17.2 </version>
			</dependency>

			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-validator</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>com.commercetools.sdk</groupId>
				<artifactId>commercetools-http-client</artifactId>
				<version>${commercetools.version}</version>
			</dependency>
			<dependency>
				<groupId>com.commercetools.sdk</groupId>
				<artifactId>commercetools-sdk-java-api</artifactId>
				<version>${commercetools.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>5.7.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>5.7.2</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-configuration-processor</artifactId>
				<version>2.7.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-core-starter</artifactId>
				<version>3.19.0</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<version>2.7.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-bindy</artifactId>
				<version>${camel.version}</version>
			</dependency>





			

			<!-- Spring Doc Version -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc.version}</version>
			</dependency>

			<!-- Aws -->

			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-aws2-s3-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-s3</artifactId>
				<version>1.12.371</version>
			</dependency>

			<dependency>

				<groupId>software.amazon.awssdk</groupId>
				<artifactId>s3</artifactId>
				<version>2.19.3</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.10.1</version>
			</dependency>
			<dependency>
	            <groupId>software.amazon.awssdk</groupId>
	            <artifactId>secretsmanager</artifactId>
	        </dependency>
	        <dependency>
	            <groupId>software.amazon.awssdk</groupId>
	            <artifactId>sts</artifactId>
	        </dependency>
	        <!-- TODO- Regions dependency might not be needed, remove after testing -->
	        <dependency>
	            <groupId>software.amazon.awssdk</groupId>
	            <artifactId>regions</artifactId>
	        </dependency>

		</dependencies>
	</dependencyManagement>
	

	

	


	<build>
		<!-- <sourceDirectory>src/main/Java</sourceDirectory> <testSourceDirectory>src/test/Java</testSourceDirectory> -->
		<plugins>
			

			

			

			

			

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>

				<configuration>
					<forkCount>0</forkCount>
					<includes>
						<include>${runSuite}</include>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
						<testFailureIgnore>true</testFailureIgnore>
					</includes>
				</configuration>
			</plugin>




			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<configuration>
					<destFile>${sonar.jacoco.reportPath}</destFile>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- check coverage during maven verify phase -->
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.78</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			







			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<version>5.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.1.4</version>
				<configuration>
					<from>
						<image>public.ecr.aws/i1i0w6p5/distroless-corretto:11.0.10-distroless-jdk</image>
					</from>
					<to>
						<tags>
							<!--suppress UnresolvedMavenProperty -->
							<tag>${project.artifactId}-${git.commit.id}</tag>
						</tags>
					</to>
				</configuration>
			</plugin>
		
			

		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>central</id>
			<name>artifactory</name>
			<url>https://artifactory.build.k8s.pelotime.com/artifactory/maven-ecomm</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>artifactory</name>
			<url>https://artifactory.build.k8s.pelotime.com/artifactory/maven-ecomm</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>maven-ecomm</id>
			<url>https://artifactory.build.k8s.pelotime.com/artifactory/maven-ecomm</url>
		</repository>
		
	</repositories>
</project>